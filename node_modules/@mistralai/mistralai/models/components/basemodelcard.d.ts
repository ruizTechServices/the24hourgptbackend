import * as z from "zod";
import { ModelCapabilities, ModelCapabilities$Outbound } from "./modelcapabilities.js";
export type BaseModelCard = {
    id: string;
    object?: string | undefined;
    created?: number | undefined;
    ownedBy?: string | undefined;
    name?: string | null | undefined;
    description?: string | null | undefined;
    maxContextLength?: number | undefined;
    aliases?: Array<string> | undefined;
    deprecation?: Date | null | undefined;
    capabilities: ModelCapabilities;
    type?: "base" | undefined;
};
/** @internal */
export declare const BaseModelCard$inboundSchema: z.ZodType<BaseModelCard, z.ZodTypeDef, unknown>;
/** @internal */
export type BaseModelCard$Outbound = {
    id: string;
    object: string;
    created?: number | undefined;
    owned_by: string;
    name?: string | null | undefined;
    description?: string | null | undefined;
    max_context_length: number;
    aliases?: Array<string> | undefined;
    deprecation?: string | null | undefined;
    capabilities: ModelCapabilities$Outbound;
    type: "base";
};
/** @internal */
export declare const BaseModelCard$outboundSchema: z.ZodType<BaseModelCard$Outbound, z.ZodTypeDef, BaseModelCard>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BaseModelCard$ {
    /** @deprecated use `BaseModelCard$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BaseModelCard, z.ZodTypeDef, unknown>;
    /** @deprecated use `BaseModelCard$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BaseModelCard$Outbound, z.ZodTypeDef, BaseModelCard>;
    /** @deprecated use `BaseModelCard$Outbound` instead. */
    type Outbound = BaseModelCard$Outbound;
}
//# sourceMappingURL=basemodelcard.d.ts.map